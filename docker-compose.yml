version: '3.9'

services:
  pgdb:
    image: postgres:latest
    container_name: pgdb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=Otan_News
      - POSTGRES_USER=admin@admin.kz
      - POSTGRES_PASSWORD=qazaqway123
      - TZ=Asia/Almaty
    restart: always
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django:
    build: .
    container_name: django
    command: gunicorn Otan_news.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - pgdb
    environment:
      - POSTGRES_HOST=pgdb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=Otan_News
      - POSTGRES_USER=admin@admin.kz
      - POSTGRES_PASSWORD=qazaqway123
      - DJANGO_API_URL=http://django:8000
    restart: always
    networks:
      - app_network
    tmpfs:
      - /static

  fastapi:
    build: .
    container_name: fastapi
    restart: always
    command: uvicorn admin_api.main:app --host 0.0.0.0 --port 8001
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - pgdb
    networks:
      - app_network
    environment:
      - POSTGRES_HOST=pgdb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=Otan_News
      - POSTGRES_USER=admin@admin.kz
      - POSTGRES_PASSWORD=qazaqway123
      - DJANGO_API_URL=http://django:8000

  redis:
    image: redis:6.2
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - .:/app
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/conf.d
    ports:
    - "8080:80"
    - "8443:8443"
    depends_on:
      - django
      - fastapi
    networks:
      - app_network

  celery:
    build: .
    restart: always
    command: celery -A Otan_news worker -l info
    volumes:
      - .:/app
    depends_on:
      - pgdb
      - redis
      - rabbitmq
    networks:
      - app_network

  celery_beat:
    build: .
    restart: always
    command: celery -A Otan_news beat -l info
    volumes:
      - .:/app
    depends_on:
      - pgdb
      - redis
      - rabbitmq
    networks:
      - app_network

  backup:
    image: postgres:latest
    command: ["bash", "-c", "while true; do pg_dump -U admin@admin.kz -d Otan_News > /backups/$$(date +'%Y-%m-%d_%H-%M-%S')_backup.sql; sleep 24h; done"]
    volumes:
      - ./backups:/backups
    depends_on:
      - pgdb
    environment:
      - TZ=Asia/Almaty
    networks:
      - app_network
    restart: always

  certbot:
    image: certbot/certbot
    restart: always
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - /root/django_backend/Otan_News.test/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done;'"

networks:
  app_network:
    driver: bridge

volumes:
  media_volume:
  postgres_data:
