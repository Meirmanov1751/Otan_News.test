version: '3.9'

services:
  pgdb:
    image: postgres:latest
    container_name: pgdb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=Otan_News
      - POSTGRES_USER=admin@admin.kz
      - POSTGRES_PASSWORD=qazaqway123
      - TZ=Asia/Almaty
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django:
    build: .
    container_name: django
    command: gunicorn Otan_news.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - pgdb
    environment:
      - POSTGRES_HOST=pgdb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=Otan_News
      - POSTGRES_USER=admin@admin.kz
      - POSTGRES_PASSWORD=qazaqway123
    networks:
      - app_network
    tmpfs:
      - /static

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  nginx:
    build: ./nginx
    volumes:
      - .:/app
    ports:
      - "1337:1337"
    depends_on:
      - django
    networks:
      - app_network

  celery:
    build: .
    command: celery -A Otan_news worker -l info
    volumes:
      - .:/app
    depends_on:
      - pgdb
      - redis
      - rabbitmq
    networks:
      - app_network

  celery_beat:
    build: .
    command: celery -A Otan_news beat -l info
    volumes:
      - .:/app
    depends_on:
      - pgdb
      - redis
      - rabbitmq
    networks:
      - app_network

  backup:
    image: postgres:latest
    command: ["bash", "-c", "while true; do pg_dump -U admin@admin.kz -d Otan_News > /backups/$$(date +'%Y-%m-%d_%H-%M-%S')_backup.sql; sleep 24h; done"]
    volumes:
      - ./backups:/backups
    depends_on:
      - pgdb
    environment:
      - TZ=Asia/Almaty
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  media_volume:
  postgres_data:
